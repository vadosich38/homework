import random
import string

from aiogram import Bot, executor, types, Dispatcher
from config import API_KEY
call_counter = 0

my_bot = Bot(API_KEY)
my_disp = Dispatcher(my_bot)

description = """
–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏

–ï–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω –º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
"""


async def on_startup(_):
    print("–ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")


@my_disp.message_handler(commands="give")
async def give(message: types.Message):
    await my_bot.send_sticker(chat_id=message.from_user.id,
                              sticker="CAACAgIAAxkBAAEJjbxkoHV9Cpb1EgWoL6f08_4GeLTCMAACzwADy_l-NuAzlLoWpDEZLwQ")
    await message.delete()


@my_disp.message_handler(commands="description")
async def descr(message: types.message):
    await message.reply(description)


@my_disp.message_handler(commands="count")
async def counter(message: types.message):
    global call_counter

    await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ {} —Ä–∞–∑".format(call_counter))
    call_counter += 1


@my_disp.message_handler(commands="start")
async def start(message: types.message):
    await message.answer("<em><b>–î–æ–±—Ä–æ</b> –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–µ–≥–æ –±–æ—Ç–∞!</em>", parse_mode="HTML")
    await message.delete()


@my_disp.message_handler()
async def answer(message: types.message):
    if "0" in message.text:
        await message.reply("NO üåö")
    elif "1" in message.text:
        await message.reply("YES üò±")
    else:
        await message.reply(random.choice(string.ascii_letters))


if __name__ == "__main__":
    executor.start_polling(my_disp, on_startup=on_startup)
